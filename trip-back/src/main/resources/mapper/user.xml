<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.user.mapper.UserMapper">

<!--	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
	</resultMap>

	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userid}
	</select>

	<insert id="joinMember" parameterType="memberDto">
		insert into members (user_name, user_id, user_password, email_id, email_domain, join_date)
		values (#{userName}, #{userId}, #{userPwd}, #{emailId}, #{emailDomain}, now())
	</insert>

	<select id="loginMember" parameterType="map" resultMap="member">
		select user_id, user_name
		from members
		where user_id = #{userid} and user_password = #{userpwd}
	</select>
	
	&lt;!&ndash; ADMIN &ndash;&gt;
	<select id="listMember" resultMap="memberAll">
		select user_name, user_id, user_password, email_id, email_domain, join_date
		from members
		order by join_date
	</select>
	
	<select id="getMember" parameterType="string" resultMap="memberAll">
		select user_id, user_name, user_password, email_id, email_domain, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<update id="updateMember" parameterType="memberDto">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="userPwd != null">user_password = #{userPwd},</if>
			<if test="emailId != null">email_id = #{emailId},</if>
			<if test="emailDomain != null">email_domain = #{emailDomain},</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete>-->

	<resultMap type="userLoginResponseDto" id="userResultMap">
		<result column="user_id" property="userId"/>
		<result column="user_login_id" property="loginId"/>
		<result column="user_pwd" property="loginPassword"/>
		<result column="user_name" property="userName"/>
		<result column="user_email" property="userEmail"/>
	</resultMap>

	<select id="getUserCount" resultType="int">
		select count(*)




		from user;
	</select>

	<select id="getUserLoginResponseDto" parameterType="int" resultMap="userResultMap">
		select user.user_id, user.user_login_id, user.user_name, user.user_email, user.user_pwd
		from user
		where user.user_id = #{userId}
	</select>

	<select id="idCheck" parameterType="string" resultType="boolean">
		select count(user_id)
		from user
		where user_login_id = #{loginId};

	</select>

</mapper>